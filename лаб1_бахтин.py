# -*- coding: utf-8 -*-
"""–ª–∞–±1_–ë–∞—Ö—Ç–∏–Ω.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MZwGzWw87t6_IvdEM4GlWOF2oPkDY_XH

#–†–∞–∑–≤–µ–¥–æ—á–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º pandas

- –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –¥–∞—Ç–∞—Å–µ—Ç: Travel Reviews (https://archive.ics.uci.edu/dataset/484/travel+reviews)

–∑–∞–¥–∞–Ω–∏–µ:
- —Å–∫–∞—á–∞—Ç—å –æ–¥–∏–Ω –∏–∑ –Ω–∞–±–æ—Ä–æ–≤ –¥–∞–Ω–Ω—ã—Ö üëæ
- –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º üëæ
- –≤—ã–≤–µ—Å—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–±–æ—Ä–µ –¥–∞–Ω–Ω—ã—Ö üëæ
- –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç–æ–ª–±—Ü–æ–≤ –∏ —Å—Ç—Ä–æ–∫ üëæ
- –∑–∞–º–µ–Ω–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ üëæ *(–≤ –¥–∞–Ω–Ω–æ–º –¥–∞—Ç–∞—Å–µ—Ç–µ –∏—Ö –Ω–µ—Ç) (–ø—É—Å—Ç—ã—Ö —è—á–µ–µ–∫ —Ç–æ–∂–µ –Ω–µ—Ç)*
- –≤–∏–∑—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —Å –ø–æ–º–æ—â—å—é Matplotlib –∏ Seaborn üëæ
-- –Ω–µ –º–µ–Ω–µ–µ 2—Ö –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–π –Ω–∞ –∫–∞–∂–¥—ã–π –ø—Ä–∏–∑–Ω–∞–∫ üëæ
-- –Ω–µ –º–µ–Ω–µ–µ 3—Ö –≥—Ä—É–ø–ø–æ–≤—ã—Ö –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–π üëæ
"""

pip install ucimlrepo

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
sns.set()  # —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º seaborn –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –≥—Ä–∞—Ñ–∏–∫–æ–≤

class colors:
    purp = '\033[95m'  # Purple color
    blue = '\033[94m'  # Blue color
    green = '\033[92m'  # Green color
    yell = '\033[93m'  # Yellow color
    red = '\033[91m'  # Red color
    fiolet = '\033[35m'
    bold = '\033[1m'  # Bold
    uline = '\033[4m'  # Underline
    endc = '\033[0m'  # End of color line

from ucimlrepo import fetch_ucirepo

# fetch dataset
travel_reviews = fetch_ucirepo(id=484)

# data (as pandas dataframes)
train = travel_reviews.data.features
y = travel_reviews.data.targets

# metadata
#print(travel_reviews.metadata)

print(f"{colors.blue}{colors.bold}–ü–æ—è—Å–Ω—è—é—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è{colors.endc}")
print(travel_reviews.variables)

#print(f"{colors.purp}{colors.bold}\n\n–ò—Å—Ö–æ–¥–Ω—ã–π –¥–∞—Ç–∞—Å–µ—Ç{colors.endc}")
#with pd.option_context('display.max_columns', None):
#  display(X)

train.rename(columns = {'Category 1':'Art galleries', 'Category 2': 'Dance clubs', 'Category 3': 'Juice bars', 'Category 4' : 'Restaurants', 'Category 5': 'Museums', 'Category 6': 'Resorts', 'Category 7': 'Parks/picnic spots', 'Category 8': 'beaches', 'Category 9': 'Theaters', 'Category 10': 'Religious institutions' }, inplace = True )

print(f"{colors.purp}{colors.bold}\n\n–î–ê–¢–ê–°–ï–¢{colors.endc}")
with pd.option_context('display.max_columns', None):
  display(train)

train.describe()

"""—Å –ø–æ–º–æ—â—å—é —ç—Ç–æ–≥–æ –º–µ—Ç–æ–¥–∞ –ø–æ—Å–º–æ—Ç—Ä–µ–ª–∏ –Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–∞—Ç–∞—Å–µ—Ç–∞ - —Å—Ä–µ–¥–Ω–µ–µ, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ/–º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –∫–∞–∂–¥–æ–π –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π/—Å—Ç–æ–ª–±—Ü–æ–≤"""

#train.describe(include=['O']) #–¥–ª—è –Ω–µ—á–∏—Å–ª–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö

"""—Ç.–∫. –≤ –¥–∞–Ω–Ω–æ–º –¥–∞—Ç–∞—Å–µ—Ç–µ –Ω–µ—Ç –Ω–µ—á–∏—Å–ª–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö, —Ç–æ –≤—ã—à–µ–æ–ø–∏—Å–∞–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é"""

train.info()

"""–ó–¥–µ—Å—å –≤—ã–≤–µ–ª–∏ —Å–ª–µ–¥—É—é—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é: –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç–æ–ª–±—Ü–æ–≤, —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –≤ –Ω–∏—Ö, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ–ø—É—Å—Ç—ã—Ö –∑–∞–ø–∏—Å–µ–π –∏ —Ç.–ø.

## –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π –∏ –≤–∑–∞–∏–º–æ—Å–≤—è–∑–µ–π

###–≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–∑–Ω–∞–∫–æ–≤
"""

#–ø–æ –≤—Å–µ–º –ø—Ä–∏–∑–Ω–∞–∫–∞–º
for i in train.columns:
  train.plot(y=i, color='green')

#–ê–†–¢-–ì–ê–õ–ï–†–ï–ò

#–≥—Ä–∞—Ñ–∏–∫ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –æ—Ü–µ–Ω–æ–∫
plt.figure(figsize=(40, 5))
sns.countplot(x='Art galleries', data=train, color='yellow')

#—Ä–∞–∑–¥–µ–ª–∏–ª–∏ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –Ω–∞ "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ" –∏ "–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ" –æ—Ü–µ–Ω–∫–∏
avg = round(train['Art galleries'].mean(), 2)
list_values = {'sum_above': 0, 'sum_below': 0}
for index, value in train['Art galleries'].items():
    if value >= avg:
      list_values['sum_above'] += 1
    else:
      list_values['sum_below'] += 1

plt.title('–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –æ—Ü–µ–Ω–æ–∫ –≤—ã—à–µ –∏ –Ω–∏–∂–µ —Å—Ä–µ–¥–Ω–µ–≥–æ')
plt.pie(list_values.values(), labels=list_values.keys(), autopct='%1.1f%%', colors=['pink', 'violet'])
plt.tight_layout()

#–î–≠–ù–° –ö–õ–£–ë–´

plt.figure(figsize=(7, 3))
means = pd.cut(train['Dance clubs'], bins=[0, 1, 2, 3], labels=['0-1', '1-2', '2-3'])
sns.countplot(x=means, color='green')

#—Ä–∞–∑–¥–µ–ª–∏–ª–∏ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –Ω–∞ "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ" –∏ "–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ" –æ—Ü–µ–Ω–∫–∏
avg = round(train['Dance clubs'].mean(), 2)
list_values = {'sum_above': 0, 'sum_below': 0}
for index, value in train['Dance clubs'].items():
    if value >= avg:
      list_values['sum_above'] += 1
    else:
      list_values['sum_below'] += 1

plt.title('–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –æ—Ü–µ–Ω–æ–∫ –≤—ã—à–µ –∏ –Ω–∏–∂–µ —Å—Ä–µ–¥–Ω–µ–≥–æ')
plt.pie(list_values.values(), labels=list_values.keys(), autopct='%1.1f%%', colors=['orange', 'yellow'])
plt.tight_layout()

#–î–ñ–£–° –ë–ê–†–´

plt.figure(figsize=(7, 3))
means = pd.cut(train['Juice bars'], bins=[0, 1, 2, 3], labels=['0-1', '1-2', '2-3'])
sns.countplot(x=means, color='blue')

avg = round(train['Juice bars'].mean(), 2)
list_values = {'sum_above': 0, 'sum_below': 0}
for index, value in train['Juice bars'].items():
    if value >= avg:
      list_values['sum_above'] += 1
    else:
      list_values['sum_below'] += 1

plt.title('–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –æ—Ü–µ–Ω–æ–∫ –≤—ã—à–µ –∏ –Ω–∏–∂–µ —Å—Ä–µ–¥–Ω–µ–≥–æ')
plt.pie(list_values.values(), labels=list_values.keys(), autopct='%1.1f%%', colors=['tomato', 'gold'])
plt.tight_layout()

#–†–ï–°–¢–û–†–ê–ù–´

plt.figure(figsize=(7, 3))
means = pd.cut(train['Restaurants'], bins=[0, 1, 2, 3], labels=['0-1', '1-2', '2-3'])
sns.countplot(x=means, color='#77BFE2')

avg = round(train['Restaurants'].mean(), 2)
list_values = {'sum_above': 0, 'sum_below': 0}
for index, value in train['Restaurants'].items():
    if value >= avg:
      list_values['sum_above'] += 1
    else:
      list_values['sum_below'] += 1

plt.title('–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –æ—Ü–µ–Ω–æ–∫ –≤—ã—à–µ –∏ –Ω–∏–∂–µ —Å—Ä–µ–¥–Ω–µ–≥–æ')
plt.pie(list_values.values(), labels=list_values.keys(), autopct='%1.1f%%', colors=['#77FAF0', '#90AAE9'])
plt.tight_layout()

#–ú–£–ó–ï–ò
plt.figure(figsize=(7, 3))
means = pd.cut(train['Museums'], bins=[0, 1, 2, 3], labels=['0-1', '1-2', '2-3'])
sns.countplot(x=means, color='#FFFEA5')

avg = round(train['Museums'].mean(), 2)
list_values = {'sum_above': 0, 'sum_below': 0}
for index, value in train['Museums'].items():
    if value >= avg:
      list_values['sum_above'] += 1
    else:
      list_values['sum_below'] += 1

plt.title('–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –æ—Ü–µ–Ω–æ–∫ –≤—ã—à–µ –∏ –Ω–∏–∂–µ —Å—Ä–µ–¥–Ω–µ–≥–æ')
plt.pie(list_values.values(), labels=list_values.keys(), autopct='%1.1f%%', colors=['#BA1FA6', '#9BAAAA'])
plt.tight_layout()

#–ö–£–†–û–†–¢–´

plt.figure(figsize=(7, 3))
means = pd.cut(train['Resorts'], bins=[0, 1, 2, 3, 4, 5], labels=['0-1', '1-2', '2-3', '3-4', '4-5'])
sns.countplot(x=means, color='#3BFA95')

avg = round(train['Resorts'].mean(),2)
list_values = {'sum_above': 0, 'sum_below': 0}
for index, value in train['Resorts'].items():
    if value >= avg:
      list_values['sum_above'] += 1
    else:
      list_values['sum_below'] += 1

plt.title('–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –æ—Ü–µ–Ω–æ–∫ –≤—ã—à–µ –∏ –Ω–∏–∂–µ —Å—Ä–µ–¥–Ω–µ–≥–æ')
plt.pie(list_values.values(), labels=list_values.keys(), autopct='%1.1f%%', colors=['#AAFFA9', '#2BF99A'])
plt.tight_layout()

#–ü–ê–†–ö–ò, –ú–ï–°–¢–ê –î–õ–Ø –ü–ò–ö–ù–ò–ö–û–í

plt.figure(figsize=(7, 3))
sns.countplot(x='Parks/picnic spots', data=train, color='#FFAA21')

avg = round(train['Parks/picnic spots'].mean(), 2)
list_values = {'sum_above': 0, 'sum_below': 0}
for index, value in train['Parks/picnic spots'].items():
    if (value >= avg):
      list_values['sum_above'] += 1
    else:
      list_values['sum_below'] += 1


plt.title('–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –æ—Ü–µ–Ω–æ–∫ –≤—ã—à–µ –∏ –Ω–∏–∂–µ —Å—Ä–µ–¥–Ω–µ–≥–æ')
plt.pie(list_values.values(), labels=list_values.keys(), autopct='%1.1f%%', colors=['#32C0F1', '#2BFFCA'])
plt.tight_layout()

#–î–õ–Ø –ü–õ–Ø–ñ–ï–ô

plt.figure(figsize=(7, 3))
means = pd.cut(train['beaches'], bins=[0, 1, 2, 3, 4, 5], labels=['0-1', '1-2', '2-3', '3-4', '4-5'])
sns.countplot(x=means, color='#EF0099')

avg = round(train['beaches'].mean(),2)
list_values = {'sum_above': 0, 'sum_below': 0}
for index, value in train['beaches'].items():
    if value >= avg:
      list_values['sum_above'] += 1
    else:
      list_values['sum_below'] += 1

plt.title('–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –æ—Ü–µ–Ω–æ–∫ –≤—ã—à–µ –∏ –Ω–∏–∂–µ —Å—Ä–µ–¥–Ω–µ–≥–æ')
plt.pie(list_values.values(), labels=list_values.keys(), autopct='%1.1f%%', colors=['#ABBFC2', '#CCFA9A'])
plt.tight_layout()

#–¢–ï–ê–¢–†–´

plt.figure(figsize=(10, 5))
train.boxplot(column='Theaters', grid=True, color='blue')

avg = round(train['Theaters'].mean(),2)
list_values = {'sum_above': 0, 'sum_below': 0}
for index, value in train['Theaters'].items():
    if value >= avg:
      list_values['sum_above'] += 1
    else:
      list_values['sum_below'] += 1

plt.title('–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –æ—Ü–µ–Ω–æ–∫ –≤—ã—à–µ –∏ –Ω–∏–∂–µ —Å—Ä–µ–¥–Ω–µ–≥–æ')
plt.pie(list_values.values(), labels=list_values.keys(), autopct='%1.1f%%', colors=['#ABA0C2', '#AA119A'])
plt.tight_layout()

#–†–ï–õ–ò–ì–ò–û–ó–ù–´–ï –£–ß–†–ï–ñ–î–ï–ù–ò–Ø
plt.figure(figsize=(10, 5))
train.boxplot(column='Religious institutions', grid=True, color='violet')

avg = round(train['Religious institutions'].mean(),2)
list_values = {'sum_above': 0, 'sum_below': 0}
for index, value in train['Religious institutions'].items():
    if value >= avg:
      list_values['sum_above'] += 1
    else:
      list_values['sum_below'] += 1

plt.title('–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –æ—Ü–µ–Ω–æ–∫ –≤—ã—à–µ –∏ –Ω–∏–∂–µ —Å—Ä–µ–¥–Ω–µ–≥–æ')
plt.pie(list_values.values(), labels=list_values.keys(), autopct='%1.1f%%', colors=['#ABFF52', '#CFF13A'])
plt.tight_layout()

"""###–≥—Ä—É–ø–ø–æ–≤–∞—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è"""

#—Ç–µ–ø–ª–æ–≤–∞—è –∫–∞—Ä—Ç–∞ —Å –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–π –ø—Ä–∏–∑–Ω–∞–∫–æ–≤, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —á—Ç–æ –∏ –∫–∞–∫ –≤–∑–∞–∏–º–æ—Å–≤—è–∑–∞–Ω–æ –º–µ–∂–¥—É —Å–æ–±–æ–π
sns.heatmap(train.corr(numeric_only = True), cmap="magma");

df = train[['Juice bars', 'Parks/picnic spots']]
#display(df)
#plt.figure(figsize=(10, 5))

sns.scatterplot(data=df, x='Juice bars', y='Parks/picnic spots', alpha=0.5)

plt.title('–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ü–µ–Ω–∫–∏ –Ω–∞ Parks/picnic –æ—Ç –æ—Ü–µ–Ω–∫–∏ –Ω–∞ Juice bars')
plt.tight_layout()

df2 = train[['Resorts', 'Religious institutions']]
sns.scatterplot(data=df2, x='Resorts', y='Religious institutions', alpha=0.5)

plt.title('–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ü–µ–Ω–∫–∏ –Ω–∞ Religious institutions –æ—Ç –æ—Ü–µ–Ω–∫–∏ –Ω–∞ Resorts')
plt.tight_layout()